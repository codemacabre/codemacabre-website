---
import { getCollection } from 'astro:content';
import BaseLayout from '~/layouts/BaseLayout.astro';
import Note from '~/components/Note.astro';

const isDev = import.meta.env.MODE === 'development';
const allNotes = await getCollection('notes');
const allProjects = await getCollection('projects');

const filteredNotes = allNotes.filter((note) => {
  return isDev ? true : note.data.draft !== true;
});
const sortedNotes = filteredNotes.sort((a, b) => {
  return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});
const latestNotes = sortedNotes.splice(0, 5);

const sortedProjects = allProjects.sort((a, b) => {
  return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});
const featuredProjects = sortedProjects.filter((project) => project.data.featured);
---
<BaseLayout>
  <h1 class="sr-only">Code Macabre</h1>
  <h2 class="front-page">
    Featured project{featuredProjects.length > 1 && 's'}
  </h2>
  <ul class="feature">
    {featuredProjects.map((project) => (
      <li>
        <a href={`/projects/${project.id}`}>
          <div class="center">
            <span class="title">{project.data.title}</span><span class="dates">(<time datetime={project.data.date.toString()}>{project.data.date.getFullYear()}</time>{project.data.endDate && <>&nbsp;-&nbsp;<time datetime={project.data.endDate.toString()}>{project.data.endDate.getFullYear()}</time></>})</span>
          </div>
        </a>
      </li>
    ))}
  </ul>
  <p class="right"><a href="/projects">See all projects</a></p>
  <h2 class="front-page">
    Latest notes
  </h2>
  <ul class="pages-list">
    {latestNotes.map((note) => <Note category={note.data.category} date={note.data.date} description={note.data.description} title={note.data.title} url={`/notes/${note.id}`} />)}
  </ul>
  <p class="right"><a href="/notes">See all notes</a></p>
</BaseLayout>
