---
import { getCollection } from 'astro:content';
import Note from '~/components/Note.astro';

const { pathname } = Astro.url;
const allNotes = await getCollection('notes');

let notes = await Promise.all(
  Object.entries(allNotes).map(([key, note]) => {
    return {
      frontmatter: note.data,
      rawContent: note.body,
      url: `/notes/${note.slug}`
    };
  })
);

const backlinksMap = {};
const linkRegex = /\[.*?\]\((.*?)\)/g;

notes.forEach(note => {
  const { frontmatter, rawContent, url } = note;
  const matches = [...rawContent.matchAll(linkRegex)];
  
  if (matches) {
    matches.forEach(match => {
      const linkedUrl = match[1];

      if (linkedUrl) {
        if (!backlinksMap[linkedUrl]) {
          backlinksMap[linkedUrl] = [];
        }
        backlinksMap[linkedUrl].push({
          frontmatter,
          url
        });
      }
    });
  }
});

const currentBacklinks = backlinksMap[pathname] || [];
---
<section class="backlinks">
  {currentBacklinks.length > 0 && (
    <h2>Backlinks</h2>
    <ul class="pages-list">
      {currentBacklinks.map(backlink => {
        return (
          <Note category={backlink.frontmatter.category} date={backlink.frontmatter.date} description={backlink.frontmatter.description} title={backlink.frontmatter.title} url={backlink.url} />
        )
      })}
    </ul>
  )}
</section>
